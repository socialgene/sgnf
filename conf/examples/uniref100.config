/*
========================================================================================
    Nextflow config file for analyzing genomes in the paper: "Comparative and pangenomic analysis of the genus Streptomyces"
    https://doi.org/10.1038/s41598-022-21731-1
========================================================================================
    The first command creates files to send to HTCONDOR:

    wget https://ftp.uniprot.org/pub/databases/uniprot/uniref/uniref100/uniref100.fasta.gz


        outdir='/home/chase/Documents/data/uniprot/adsasa'

        nextflow run . \
            -profile uniref100,docker \
            --outdir $outdir \
            --htcondor \
            -resume

    # The second parses the HTCONDOR results and then runs all other computation (e.g. BLASTp, MMseqs2)
        nextflow run . \
            -profile jgi_streptomyces_pangenome,docker \
            --outdir $outdir \
            --domtblout_path '/home/chase/Documents/socialgene_data/jgi_steptomyces_pangenome/htcondor_cache/chtc_results/chtc_results/*.domtblout.gz' \
            -resume

----------------------------------------------------------------------------------------
*/

params {
    local_fasta = '/home/chase/Documents/data/uniprot/bro.faa.gz'

    /*
    ////////////////////////
    set which modules to run
    ////////////////////////
    */
        mibig           = false
        hmmlist         = ["antismash","amrfinder","classiphage","pfam","resfams","tigrfam"]
        mmseqs2         = false
        blastp          = false
        ncbi_taxonomy   = false
        build_database  = false
        antismash       = false

    /*

    ////////////////////////
    Adjust per your computer
    ////////////////////////
    */
        // If running the pipeline on a single computer, fasta_splits should be set at the same
        // number as max_cpus. For very large input data you might
        // want to set fasta_splits to a higher number to allow checkpointing. Howevever, setting
        // fasta_splits too high will result in diminishing returns due to overhead and possibly
        // too-few proteins per file (would probably keep <1000 for any size of dataset)
        fasta_splits                = 24
        max_cpus                    = 24
        max_memory                  = '60.GB'
        max_time                    = 6000.h

}

process {
    withName:SEQKIT_SPLIT {
       cpus   = { check_max( 1    * task.attempt, 'cpus'    ) }
       memory = { check_max( 20   * task.attempt, 'memory'  ) }
       time   = { check_max( 60000.h * task.attempt, 'time'   ) }
    }



}
