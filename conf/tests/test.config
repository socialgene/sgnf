/*
========================================================================================
    Nextflow config file for running minimal tests
========================================================================================

    Use as follows:

        make clean
        rm -r /tmp/sg_test
        curl -s "https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=AY623658.2&rettype=gbwithparts&retmode=text" | gzip > "/tmp/AY623658.2.gb.gz"
        curl -s https://gist.githubusercontent.com/chasemc/0e4d96034a011d68fdd7b5da4cc22c64/raw/dd79e8b62a8dad72ac769b2cbd6ffda2f287d34f/pfam_subset.hmm | gzip > "/tmp/pfam_subset.hmm.gz"
        outdir='/tmp/sg_test'

        nextflow run . \
            -profile test,docker \
            --outdir $outdir \
            --sort_fasta \
            -resume \
            --local_fasta '/tmp/AY623658.2.gb.gz' \
            --custom_hmm_file '/tmp/pfam_subset.hmm.gz' \
            --outdir_download_cache '/tmp/socialgene_data/older/download_cache'




        ./bin/test.py --sg_outdir /tmp/sg_test
----------------------------------------------------------------------------------------
*/

params {
        config_profile_name         = 'Ultra-Quickstart run'
        config_profile_description  = 'Minimal test dataset to demo pipeline function'
        build_database              = true

    /*
    ////////////////////////
    set which modules to run
    ////////////////////////
    */

        mmseqs_steps    = '90'
        blastp          = true // only set to true for small datasets or if you know what you're doing
        ncbi_taxonomy   = true // TODO: THS BREAKS NEO4J BUILD STEP, MAYBE SGPY ISSUE?
        antismash       = false
    /*
    ////////////////////////
    adjust per your computer
    ////////////////////////
    */
        fasta_splits                = 2
        max_cpus                    = 2
        max_memory                  = '4 GB'
        max_time                    = 0.5.h
}

process {
    withName:HMMER_HMMSEARCH {
        cpus   = { check_max( 1    * task.attempt, 'cpus'    ) }
        memory = { check_max( 1.GB    * task.attempt, 'memory'  ) }
        time   = { check_max( 0.5.h * task.attempt, 'time'   ) }
    }

    withName: 'SEQKIT_SPLIT' {
        ext.args = '-p 2'
        // to standardize file by approximate number of amino acids you cna use `-l`; e.g.:
        // ext.args = '-l 50000000'
    }
}
