/*
========================================================================================
    Nextflow config file for running minimal tests
========================================================================================

    Use as follows:

    ./bin/test.py --sg_outdir $outdir --verbose --url https://gist.githubusercontent.com/chasemc/540ba908e617535bdadcd0a3ea9f5ab4/raw/89c726296c05ca7f15b279c768b75cf8b65f4a08/a.json
    /tmp/github/kwan_lab/socialgene/sgnf/bin/test_generate_data.py --sg_outdir $outdir --outpath /tmp/tt/a.json


    outdir=$(mktemp -d)
    outdir_download_cache=$outdir/outdir_download_cache
    mkdir -p $outdir/socialgene_per_run

    nextflow run . \
        -profile test_full,docker \
        --outdir $outdir \
        -resume \
        --outdir_download_cache /tmp/socialgene_data/cache

    ./bin/test.py --sg_outdir $outdir

    rm -r $outdir
----------------------------------------------------------------------------------------

wget https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/005/845/GCF_000005845.2_ASM584v2/GCF_000005845.2_ASM584v2_feature_table.txt.gz
wget https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/012/570/145/GCF_012570145.1_ASM1257014v1/GCF_012570145.1_ASM1257014v1_feature_table.txt.gz
wget https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/007/821/455/GCF_007821455.1_pine-spades/GCF_007821455.1_pine-spades_feature_table.txt.gz


GCF_000005845.2_ASM584v2_feature_table.txt.gz
GCF_012570145.1_ASM1257014v1_feature_table.txt.gz
GCF_007821455.1_pine-spades_feature_table.txt.gz

# check number of protein connections expected per genome
zgrep -c "CDS" GCF_000005845.2_ASM584v2_feature_table.txt.gz
zgrep -c "CDS" GCF_012570145.1_ASM1257014v1_feature_table.txt.gz
zgrep -c "CDS" GCF_007821455.1_pine-spades_feature_table.txt.gz
# 4315, 410, 410

#
# MATCH z=(a1:assembly)<-[:ASSEMBLES_TO]-(n1:nucleotide)-[:ENCODES]->(p1:protein) RETURN a1.id,  count(p1)
# ╒══════════════════════════════════╤═══════════╕
# │"a1.id"                           │"count(p1)"│
# ╞══════════════════════════════════╪═══════════╡
# │"GCF_000005845.2_ASM584v2_genomic"│4315       │
# ├──────────────────────────────────┼───────────┤
# │"GCF_007821455.1"                 │410        │
# ├──────────────────────────────────┼───────────┤
# │"GCF_012570145.1"                 │410        │
# └──────────────────────────────────┴───────────┘

##############################################################################
# check number of protein connections expected per genome
zgrep -c "CDS" GCF_000005845.2_ASM584v2_feature_table.txt.gz
zgrep -c "CDS" GCF_012570145.1_ASM1257014v1_feature_table.txt.gz
zgrep -c "CDS" GCF_007821455.1_pine-spades_feature_table.txt.gz

# number of expected nucleotide sequences per genome
zcat GCF_000005845.2_ASM584v2_feature_table.txt.gz     | cut -f 7 | sort | uniq | grep -v "genomic_accession" | wc -l
zcat GCF_012570145.1_ASM1257014v1_feature_table.txt.gz | cut -f 7 | sort | uniq | grep -v "genomic_accession" | wc -l
zcat GCF_007821455.1_pine-spades_feature_table.txt.gz  | cut -f 7 | sort | uniq | grep -v "genomic_accession" | wc -l
#  1, 2, 16


# MATCH z=(a1:assembly)<-[:ASSEMBLES_TO]-(n1:nucleotide) RETURN a1.id, count(n1)
# ╒══════════════════════════════════╤═══════════╕
# │"a1.id"                           │"count(n1)"│
# ╞══════════════════════════════════╪═══════════╡
# │"GCF_000005845.2_ASM584v2_genomic"│1          │
# ├──────────────────────────────────┼───────────┤
# │"GCF_007821455.1"                 │16         │
# ├──────────────────────────────────┼───────────┤
# │"GCF_012570145.1"                 │2          │
# └──────────────────────────────────┴───────────┘

##############################################################################

zcat GCF_000005845.2_ASM584v2_feature_table.txt.gz  cut -f 2,7,8,9,10,11,12,14,19


MATCH z=(a1:assembly)<-[:ASSEMBLES_TO]-(n1:nucleotide)-[e1:ENCODES]->(p1:protein)-[:PROTEIN_SOURCE]->(ps1:protein_source)
RETURN
    apoc.text.join(apoc.text.split(a1.id,"_")[0..2], "_") as assembly,
    n1.external_id as genomic_accession,
    e1.start as start,
    e1.end as end,
    [0,"+",0,"-"][e1.strand] as strand,
    ps1.id as product_accession,
    ps1.description as name,
    ps1.seqlen as product_length



zcat GCF_000005845.2_ASM584v2_feature_table.txt.gz | grep "CDS" | head | cut -f 3,7,8,9,10,11,14,19

WITH '
MATCH z=(a1:assembly)<-[:ASSEMBLES_TO]-(n1:nucleotide)-[e1:ENCODES]->(p1:protein)-[:PROTEIN_SOURCE]->(ps1:protein_source)
WHERE a1.id STARTS WITH "GCF_000005845.2"
RETURN
    apoc.text.join(apoc.text.split(a1.id,"_")[0..2], "_") as assembly,
    n1.external_id as genomic_accession,
    e1.start as start,
    e1.end as end,
    [0,"+",0,"-"][e1.strand] as strand,
    ps1.id as product_accession,
    ps1.description as name,
    ps1.seqlen as product_length
    ORDER BY genomic_accession,start
' AS query
CALL apoc.export.csv.query(query, "import/b.csv", {delim:"\t",quotes:false})
YIELD file, source, format, nodes, relationships, properties, time, rows, batchSize, batches, done, data
RETURN file, source, format, nodes, relationships, properties, time, rows, batchSize, batches, done, data;
















*/

params {

    ncbi_genome_download_command = '-s refseq --assembly-accessions GCF_000005845.2,GCF_007821455.1,GCF_012570145.1 bacteria'

    sort_fasta = true
    /*
    ////////////////////////
    set which modules to run
    ////////////////////////
    */

        mmseqs_steps    = '90'
        blastp          = true
        hmmlist         = antismash,amrfinder,resfams
        ncbi_taxonomy   = true
        antismash       = true
        build_database  = true
    /*
    ////////////////////////
    adjust per your computer
    ////////////////////////
    */
        fasta_splits                = 23
        max_cpus                    = 23
        max_memory                  = '10 GB'
        max_time                    = 1.h
}


process {

    withName:DIAMOND_BLASTP {
        cpus = 24
        ext.args = "-k0 --max-hsps 1 --query-cover 90 --subject-cover 90 --id 90  --fast"
    }

    withName:'MMSEQS2_CLUSTER'{
        ext.args = '--min-seq-id 0.9 -c 0.9 --cov-mode 0'
    }

}
