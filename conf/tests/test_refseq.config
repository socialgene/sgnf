/*
####################################################################
To create data:

Because this is a test we include the header (ie also grep for '#')



####################################################################
Use as follows:

outdir='/home/chase/Documents/socialgene_data/test_refseq'
nextflow run nextflow \
    -profile test_refseq,conda \
    --single_outdir $outdir \
    -resume

####################################################################
*/


params {
    config_profile_name        = 'refseq test'
    config_profile_description = 'Minimal test dataset to check pipeline function'
    enable_conda = true
    max_cpus   = 24
    max_memory = '62 GB'
    max_time   = 6000.h
    mode = 'dev'
    builddb = true
    hmmlist = 'antismash'
    outdir_refseq_cache             = '/home/chase/Documents/socialgene_data/test_refseq_cache'
    refseq_nr_protein_fasta_dir     = '/home/chase/Documents/socialgene/test_data/'
    refseq_nr_protein_fasta_glob    = '**/BGC0000001.protein.faa.gz'
    feature_table_dir               = '/home/chase/Documents/socialgene/test_data/'
    feature_table_glob              = '**/BGC0000001_feature_table.txt.gz'
    crabhash_path                   = '/home/chase/Documents/github/crabhash/target/release'
    hmmlist                         = 'antismash'

/*
set which modules to run
*/
    hmms            = true
}


process {
    withName:HMMER_HMMSEARCH {
        // For optimum speed, split inputs to the number of cpus
        // and adjust the memory to a value below (params.max_memory / params.max_cpus)
        cpus   = { check_max( 1    * task.attempt, 'cpus'    ) }
        memory = '2.GB'
        time   = { check_max( 60.h  * task.attempt, 'time'    ) }
    }
}

