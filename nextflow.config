/*
========================================================================================
    nf-core/socialgene Nextflow config file
========================================================================================
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    outdir ="not-used-but-needed-in-lint"
    input = "not-used-but-needed-in-lint"
    fasta = "not-used-but-needed-in-lint"

    // Boilerplate options
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    help                       = false
    validate_params            = true
    show_hidden_params         = false
    schema_ignore_params       = 'genomes'
    enable_conda               = false

    // Config options
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_description = null
    config_profile_contact     = null
    config_profile_url         = null
    config_profile_name        = null

    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '62.GB'
    max_cpus                   = 16
    max_time                   = '240.h'

    // ADDITIONAL CONFIGS
    sequence_files_glob         = null
    gbk_input                   = null
    ncbi_datasets_taxon         = null
    hmm_splits            = 1
    fasta_splits                  = 1
    builddb                     = true
    mode                        = 'dev'
    single_outdir               = "socialgene_results"
    outdir_per_run              = "${params.single_outdir}/socialgene_per_run"
    outdir_blast_cache          = "${params.outdir_per_run}/blastp_cache"
    outdir_download_cache       = '/home/chase/Documents/socialgene_data/download_cache' //"${params.single_outdir}/socialgene_long_cache"
    outdir_refseq_cache         = '/home/chase/Documents/socialgene_data/refseq_cache' //"${params.single_outdir}/socialgene_long_cache"
    outdir_neo4j                = "${params.single_outdir}/socialgene_neo4j"
    genome_downloads            = "${params.single_outdir}/genome_downloads"
    tracedir                    = "${params.outdir_per_run}/pipeline_info"
    ncbi_genome_download_command = null
    paired_omics_json_path      = null
    // sg_modules
    blastp                      = false
    mmseqs2                     = false
    paired_omics                = false
    hmms                        = false
    ncbi_taxonomy               = false
    hmmlist                     = null
    // ["antismash","amrfinder","bigslice","classiphage","pfam","prism","resfams","tigrfam","virus_orthologous_groups"]
    custom_hmm_file             = null


    // Used for analyzing all of refseq
    refseq_nr_protein_fasta_dir     = null
    refseq_nr_protein_fasta_glob    = '**/complete.nonredundant_protein*.protein.faa.gz'
    feature_table_dir               = null
    feature_table_glob              = '**/*_feature_table.txt.gz'
    crabhash_path                   = null


    // PYTHON PACKAGE PARAMS

    HMM_LOCATION
    SG_LOC_NEO4J
    NEO4J_dbms_memory_pagecache_size
    NEO4J_dbms_memory_heap_initial__size
    NEO4J_dbms_memory_heap_max__size

    HMMSEARCH_Z=100000000

    // These effect which HMMS hits are significant and reported
    HMMSEARCH_IEVALUE=0.1
    HMMSEARCH_E=10.0
    HMMSEARCH_DOME=10.0
    HMMSEARCH_INCE=0.1
    HMMSEARCH_INCDOME=0.01
    HMMSEARCH_BITCUTOFFS=NONE

    HMMSEARCH_SEED=42

    // You can probably ignore these parameters
    HMMSEARCH_BACKGROUND=NONE
    HMMSEARCH_BIASFILTER=NONE
    HMMSEARCH_NULL2=NONE
    HMMSEARCH_DOMZ=NONE
    HMMSEARCH_F1=0.02
    HMMSEARCH_F2=0.001
    HMMSEARCH_F3=1e-05

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'


// Load nf-core custom profiles from different Institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}


profiles {
    chicago {
        //params.single_outdir          = "/home/chase/Documents/socialgene_outdir"
        //params.refseq_fasta_file_dir = "${params.outdir}/refseq_fasta"
       // process.conda          = "/home/chase/miniconda3/envs/socialgene"
        params.max_memory      = 60.GB
        params.max_cpus        = 24
        params.max_time        = 1000.h
    }

    deepthought {
        params.single_outdir   = "/home/chase/socialgene_test"
        //params.refseq_fasta_file_dir = "${params.outdir}/refseq_fasta"
        process.conda          = "/home/chase/miniconda3/envs/socialgene"
        params.max_memory      = 500.GB
        params.max_cpus        = 90
        params.max_time        = 1000.h
        process.executor       = "slurm"
        process.queue          = "queue"

    }

    slurm {
        process.executor = "slurm"
        process.queue = "queue"
        executor {
                queueSize = 50
        }
    }
}

profiles {
    debug { process.beforeScript = 'echo $HOSTNAME' }
    conda {
        process.conda          = "conda_environment.yml"
        params.enable_conda    = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    podman {
        podman.enabled         = true
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    shifter {
        shifter.enabled        = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        charliecloud.enabled   = false
    }
    charliecloud {
        charliecloud.enabled   = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
    }

}

// Example profiles

profiles {

    // Example configs
    example     { includeConfig 'conf/examples/example.config'    }
    simple_custom_input  { includeConfig 'conf/examples/simple_custom_input.config' }
    simple_run  { includeConfig 'conf/examples/simple_run.config' }
    micromonospora  { includeConfig 'conf/examples/micromonospora.config' }
    mibig  { includeConfig 'conf/examples/mibig.config' }
    streptomyces  { includeConfig 'conf/examples/streptomyces.config' }
    example     { includeConfig 'conf/examples/example.config'    }
    actinomycetia {includeConfig 'conf/examples/actinomycetia.config'}
    paired_omics {includeConfig 'conf/examples/paired_omics.config'}
    refseq  { includeConfig 'conf/examples/refseq.config' }
    diazaquinomycin  { includeConfig 'conf/examples/diazaquinomycin.config' }
    lagriamide  { includeConfig 'conf/examples/lagriamide.config' }

}

// Test workflows

profiles {

    // Test configs
    test_refseq { includeConfig 'conf/tests/test_refseq.config'  }
    test        { includeConfig 'conf/tests/test.config'          }
    test_full   { includeConfig 'conf/tests/test_full.config'     }
    BGC0000054   { includeConfig 'conf/tests/BGC0000054.config'     }



}



// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'nf-core/socialgene'
    author          = 'Chase M. Clark'
    homePage        = 'https://github.com/nf-core/socialgene'
    description     = 'Download, Analyze, and Create a SocialGene Database'
    mainScript      = 'main.nf'
    nextflowVersion = '!>=22.04.0'
    version         = '0.0.1'
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
